{"version":3,"sources":["store/GroupRepository.ts","store/DestinationRepository.ts","AuthService.ts","util/compare.ts","DestinationList.tsx","Picker.js","UserContext.tsx","SignInDialog.tsx","GroupContext.tsx","GroupSelector.tsx","GroupCreateForm.tsx","App.tsx","registerServiceWorker.js","index.js"],"names":["GroupRepository","Object","classCallCheck","this","_db","firebase","firestore","createClass","key","value","_createGroup","asyncToGenerator","regenerator_default","a","mark","_callee","group","doc","wrap","_context","prev","next","collection","add","sent","abrupt","objectSpread","id","stop","_x","apply","arguments","groupId","userId","update","users","FieldValue","arrayUnion","uid","where","get","then","gs","docs","map","data","DestinationRepository","observer","_this","Observable","create","onSnapshot","querySnapshot","destinations","forEach","push","subscribe","_createDestination","dest","delete","AuthService","_groupRepo","firebaseAuth","currentUser$","auth","obs","onAuthStateChanged","user","pipe","switchMap","sub","getGroupMembership","groups","err","console","error","startWith","share","signOut","localeCompare","b","DestinationList","_ref","selector","onCreate","onDelete","destinationItems","slice","sort","d","name","compare","react_default","createElement","onClick","DestinationAdder","onAdd","_ref2","_useState","useState","_useState2","slicedToArray","text","setText","handleSubmit","onChange","event","target","onKeyPress","Picker","picked","setPicked","length","Math","random","reduce","winner","UserContext","React","createContext","SignInDialog","authService","useContext","react_router","to","pathname","firebaseUiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","PhoneAuthProvider","callbacks","signInSuccessWithAuthResult","react_firebaseui","uiConfig","GroupContext","GroupSelector","onSelect","selectedGroup","setSelectedGroup","displayName","g","e","find","GroupCreateForm","setName","_useState3","_useState4","working","setWorking","_useState5","_useState6","setErr","disabled","createGroup","finally","initializeApp","apiKey","process","authDomain","projectId","log","store","ProtectedRoute","component","rest","objectWithoutProperties","Component","assign","render","props","state","from","location","Home","setGroup","setDestinations","useEffect","unsubscribe","Fragment","src_GroupContext","Provider","createDestination","deleteDestination","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","setUser","signOutLink","react_router_dom","className","src_UserContext","exact","path","_","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.999fa3f4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport { Group, GroupInfo } from \"../interfaces\";\n\nexport class GroupRepository {\n  private _db: firebase.firestore.Firestore;\n\n  constructor() {\n    this._db = firebase.firestore();\n  }\n\n  async createGroup(group: GroupInfo): Promise<Group> {\n    const doc = await this._db.collection(\"groups\").add(group);\n\n    return { ...group, id: doc.id };\n  }\n\n  addGroupMember(groupId: string, userId: string): Promise<void> {\n    return this._db\n      .collection(\"groups\")\n      .doc(groupId)\n      .update({\n        users: firebase.firestore.FieldValue.arrayUnion(userId)\n      });\n  }\n\n  getGroupMembership(uid: string): Promise<Group[]> {\n    return this._db\n      .collection(\"groups\")\n      .where(\"users\", \"array-contains\", uid)\n      .get()\n      .then(gs => {\n        return gs.docs.map(doc => ({\n          ...(doc.data() as GroupInfo),\n          id: doc.id\n        }));\n      });\n  }\n}\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport { Observable, Observer, PartialObserver, Subscription } from \"rxjs\";\nimport { Destination, DestinationInfo } from \"../interfaces\";\n\nexport class DestinationRepository {\n  private _db: firebase.firestore.Firestore;\n\n  constructor() {\n    this._db = firebase.firestore();\n\n  }\n  subscribe(groupId: string, observer: PartialObserver<Destination[]>): Subscription {\n    return Observable.create(\n      (observer: Observer<Destination[]>) => {\n        const unsubscribe = this._db\n          .collection(\"destinations\")\n          .where(\"groupId\", \"==\", groupId)\n          .onSnapshot(querySnapshot => {\n            const destinations = [] as Destination[];\n            querySnapshot.forEach(doc =>\n              destinations.push({\n                id: doc.id,\n                ...doc.data()\n              } as Destination)\n            );\n            observer.next(destinations);\n          });\n        return unsubscribe;\n      }\n    ).subscribe(observer);\n  }\n\n  async createDestination(dest: DestinationInfo) {\n    await this._db.collection(\"destinations\").add(dest);\n  }\n\n  deleteDestination(id: string) {\n    return this._db\n      .collection(\"destinations\")\n      .doc(id)\n      .delete();\n  }\n}\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { Observable, Subscriber } from \"rxjs\";\nimport { share, startWith, switchMap } from \"rxjs/operators\";\n\nimport { User } from \"./interfaces\";\nimport { GroupRepository } from \"./store\";\n\nclass AuthService {\n  private _groupRepo: GroupRepository = new GroupRepository();\n\n  firebaseAuth: firebase.auth.Auth;\n  currentUser$: Observable<User | null>;\n\n  constructor() {\n    this.firebaseAuth = firebase.auth();\n\n    this.currentUser$ = new Observable(\n      (obs: Subscriber<firebase.User | null>) => {\n        this.firebaseAuth.onAuthStateChanged(user => {\n          obs.next(user);\n        });\n      }\n    ).pipe(\n      switchMap((user: firebase.User | null) => {\n        if (user == null) return [null];\n        return new Observable((sub: Subscriber<User>) => {\n          this._groupRepo.getGroupMembership(user.uid).then(\n            groups => sub.next({ ...user, groups }),\n            err => {\n              console.error(\"error fetching groups\", err);\n              sub.next({\n                ...user,\n                groups: []\n              });\n            }\n          );\n        });\n      }),\n      startWith(null),\n      share()\n    );\n  }\n\n  async signOut() {\n    await this.firebaseAuth.signOut();\n  }\n}\n\nexport default AuthService;\n","type Selector<T, TProp> = (item: T) => TProp;\ntype Comparer<T> = (a: T, b: T) => number;\n\nexport function localeCompare(a: string, b: string) {\n  return a.localeCompare(b);\n}\n\nexport function localeCompareWithSelector<T>(selector: Selector<T, string>) {\n  return compare(localeCompare, selector);\n}\n\nfunction compare<T, TProp>(compare: Comparer<TProp>, selector: Selector<T, TProp>): Comparer<T> {\n  return function(a: T, b: T) {\n    return compare(selector(a), selector(b));\n  };\n}\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport { useState } from \"react\";\nimport { localeCompareWithSelector } from \"./util/compare\";\nimport { Destination, DestinationInfo } from \"./interfaces\";\n\ninterface DestinationListProps {\n  groupId: string;\n  destinations: Destination[];\n  onCreate(d: DestinationInfo): void;\n  onDelete(d: DestinationInfo): void;\n}\n\nexport default function DestinationList({ groupId, destinations, onCreate, onDelete }: DestinationListProps) {\n  const destinationItems = destinations\n    .slice()\n    .sort(localeCompareWithSelector(d => d.name))\n    .map((d: any) => (\n      <li key={d.name}>\n        <button onClick={() => onDelete(d)}>delete</button>\n        {\" \" + d.name}\n      </li>\n    ));\n\n  return (\n    <div>\n      <ul>{destinationItems}</ul>\n      Add new:\n      <br />\n      <DestinationAdder groupId={groupId} onAdd={onCreate} />\n    </div>\n  );\n}\n\ninterface DestinationAdderProps {\n  groupId: string;\n  onAdd(d: DestinationInfo): void;\n}\n\nfunction DestinationAdder({ groupId, onAdd }: DestinationAdderProps) {\n  const [text, setText] = useState(\"\");\n\n  const handleSubmit = () => {\n    onAdd({ groupId, name: text });\n    setText(\"\");\n  };\n\n  const handleValueChanged = (event: ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value);\n  };\n\n  const handleInputKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <div>\n      <label>Name</label>\n      <input\n        value={text}\n        onChange={handleValueChanged}\n        onKeyPress={handleInputKeyPress}\n      />\n      <button onClick={handleSubmit}>Add</button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\n\nexport default function Picker({ destinations }) {\n  const [picked, setPicked] = useState();\n  const handlePick = () => {\n    const { dest } = destinations\n      .map(dest => ({ dest, sort: Math.random() }))\n      .reduce((winner, next) => (winner.sort > next.sort ? winner : next));\n    setPicked(dest);\n  };\n\n  if (!destinations || !destinations.length) {\n    return <div />;\n  }\n\n  return (\n    <div>\n      <button onClick={handlePick}>Pick</button>{\" \"}\n      {(picked && picked.name) || \"\\xA0\"}\n    </div>\n  );\n}\n","import React from \"react\"\nimport { User } from \"./interfaces\";\n\nconst UserContext = React.createContext<User | null>(null);\n\nexport default UserContext\n","import React, { useContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { FirebaseAuth } from \"react-firebaseui\";\nimport AuthService from \"./AuthService\";\nimport UserContext from \"./UserContext\";\nimport { Redirect } from \"react-router\";\n\ninterface SignInDialogProps {\n  authService: AuthService;\n}\n\nexport default function SignInDialog({ authService }: SignInDialogProps) {\n  const user = useContext(UserContext);\n  if (user != null) {\n    return <Redirect to={{ pathname: \"/\" }} />;\n  }\n\n  const firebaseUiConfig: firebaseui.auth.Config = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false,\n    },\n  };\n\n  return (\n    <FirebaseAuth\n      uiConfig={firebaseUiConfig}\n      firebaseAuth={authService.firebaseAuth}\n    />\n  );\n}\n","import React from \"react\"\nimport { Group } from \"./interfaces\";\n\nconst GroupContext = React.createContext<Group | null>(null);\n\nexport default GroupContext\n","import React, { useState, ChangeEvent } from \"react\";\nimport { Group, User } from \"./interfaces\";\n\ninterface GroupSelectorProps {\n  user: User;\n  onSelect(g: Group): void;\n}\n\nexport function GroupSelector({ user, onSelect }: GroupSelectorProps) {\n  const [selectedGroup, setSelectedGroup] = useState<Group | null>(\n    user.groups[0]\n  );\n\n  if (!user.groups.length) {\n    return <p>User '{user.displayName}' is not a member of any groups.</p>;\n  }\n\n  const groups = user.groups.map(g => <option value={g.id}>{g.name}</option>);\n  const handleChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    const group = user.groups.find(g => g.id === e.target.value);\n    setSelectedGroup(group || null);\n  };\n  const handleSubmit = () => {\n    if (selectedGroup) {\n      onSelect(selectedGroup);\n    }\n  };\n\n  return (\n    <div>\n      <p>no group selected</p>\n      <select\n        value={(selectedGroup && selectedGroup.id) || \"\"}\n        onChange={handleChange}\n      >\n        {groups}\n      </select>\n      <button onClick={handleSubmit}>Switch</button>\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { GroupRepository } from \"./store\";\nimport UserContext from \"./UserContext\";\n\nexport function GroupCreateForm({ onCreate }: any) {\n  const [name, setName] = useState(\"\");\n  const [working, setWorking] = useState(false);\n  const user = useContext(UserContext)!;\n  const [err, setErr] = useState(null);\n\n  const handleSubmit = () => {\n    if (name && user) {\n      setWorking(true);\n      new GroupRepository()\n        .createGroup({ name, users: [user.uid] })\n        .then(onCreate, setErr)\n        .finally(() => setWorking(false));\n    }\n  };\n  const disabled = !name.length || working;\n\n  return (\n    <div>\n      <div>\n        <input value={name} onChange={e => setName(e.target.value)} />\n        <button disabled={disabled} onClick={handleSubmit}>\n          Create\n        </button>\n      </div>\n      {err}\n    </div>\n  );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect, RouteProps } from \"react-router-dom\";\nimport \"./App.css\";\nimport { DestinationRepository } from \"./store\";\nimport AuthService from \"./AuthService\";\nimport DestinationList from \"./DestinationList\";\nimport Picker from \"./Picker\";\nimport SignInDialog from \"./SignInDialog\";\nimport firebase from \"firebase/app\";\nimport { User, Destination, Group } from \"./interfaces\";\nimport GroupContext from \"./GroupContext\";\nimport UserContext from \"./UserContext\";\nimport { GroupSelector } from \"./GroupSelector\";\nimport { GroupCreateForm } from \"./GroupCreateForm\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\n});\n\nconsole.log(\"DestinationRepository\", DestinationRepository)\nconst store = new DestinationRepository();\nconst authService = new AuthService();\n\nfunction ProtectedRoute({ component, ...rest }: RouteProps) {\n  const Component = component as React.ReactType;\n\n  const user = useContext<any>(UserContext);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/sign-in\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default function App() {\n  const [user, setUser] = useState<User | null>(null);\n  useEffect(() => {\n    const sub = authService.currentUser$.subscribe(setUser);\n    return () => sub.unsubscribe();\n  }, []);\n\n  const handleSignOut = () => {\n    authService.signOut();\n  };\n\n  const signOutLink = user ? (\n    <p>\n      Signed in as: {user.displayName}\n      <button onClick={handleSignOut}>Sign out</button>\n    </p>\n  ) : null;\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Lunchtime</h1>\n        </header>\n\n        <div className=\"App-body-container\">\n          <div className=\"App-body\">\n            {signOutLink}\n            <UserContext.Provider value={user}>\n              <Switch>\n                <ProtectedRoute exact path=\"/\" component={Home} />\n                <Route\n                  path=\"/sign-in\"\n                  render={_ => <SignInDialog authService={authService} />}\n                />\n              </Switch>\n            </UserContext.Provider>\n          </div>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nfunction Home() {\n  const user = useContext(UserContext)!;\n  const [group, setGroup] = useState<Group | null>(null);\n  const [destinations, setDestinations] = useState<Destination[] | null>(null);\n\n  useEffect(() => {\n    if (!group) return;\n    const sub = store.subscribe(group.id, { next: setDestinations });\n    return () => sub.unsubscribe();\n  }, [user, group]);\n\n  if (group == null) {\n    return (\n      <>\n        <GroupSelector user={user} onSelect={setGroup} />\n        <GroupCreateForm onCreate={setGroup} />\n      </>\n    );\n  }\n\n  if (destinations == null) {\n    return <p>Loading data...</p>;\n  }\n\n  const onDestinationCreate = (dest: Destination) => {\n    store.createDestination(dest);\n  };\n\n  const onDestinationDelete = (dest: Destination) => {\n    store.deleteDestination(dest.id);\n  };\n\n  return (\n    <GroupContext.Provider value={group}>\n      <h1>Pick a place</h1>\n      <Picker destinations={destinations} />\n\n      <h1>Edit places</h1>\n      <DestinationList\n        groupId={group.id}\n        destinations={destinations}\n        onCreate={onDestinationCreate}\n        onDelete={onDestinationDelete}\n      />\n    </GroupContext.Provider>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}